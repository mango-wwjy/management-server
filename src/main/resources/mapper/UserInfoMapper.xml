<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.entity.UserInfo" >
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="auth_id" property="authId" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, auth_id, token, user_name, user_password, status, avatar,introduction
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.entity.UserInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.entity.UserInfoExample" >
    delete from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.entity.UserInfo" >
    insert into user_info (id, auth_id, token, 
      user_name, user_password, status, 
      avatar)
    values (#{id,jdbcType=VARCHAR}, #{authId,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.entity.UserInfo" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="authId != null" >
        auth_id,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPassword != null" >
        user_password,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="authId != null" >
        #{authId,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.entity.UserInfoExample" resultType="java.lang.Integer" >
    select count(*) from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map" >
    update user_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.authId != null" >
        auth_id = #{record.authId,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null" >
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null" >
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null" >
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_info
    set id = #{record.id,jdbcType=VARCHAR},
      auth_id = #{record.authId,jdbcType=VARCHAR},
      token = #{record.token,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <select id="selectUserInfoAll" resultType="com.entity.UserInfo">
    select u.*,
    IFNULL(s.student_name,t.teacher_name) as realName,
    IFNULL(s.student_email,t.teacher_email) as userEmail,
    IFNULL(s.student_phone,t.teacher_phone) as userPhone
    from user_info u
    left join student_info s on u.auth_id = s.student_number
    left join teacher_info t on u.auth_id = t.teacher_number
    where u.status = '0000'
    <if test="fuzzy !=null and fuzzy!=''">
      and u.auth_id LIKE concat(concat('%',#{fuzzy}),'%')
      or u.user_name LIKE concat(concat('%',#{fuzzy}),'%')
      or introduction LIKE concat(concat('%',#{fuzzy}),'%')
      or s.student_name like concat(concat('%',#{fuzzy}),'%')
      or t.teacher_name like concat(concat('%',#{fuzzy}),'%')
    </if>

    <if test="userName != null and userName != ''" >
      AND u.user_name= #{userName,jdbcType=VARCHAR}
    </if>

    <if test="authId != null and authId != ''" >
      AND u.auth_id= #{authId,jdbcType=VARCHAR}
    </if>


  </select>
  <select id="getUserInfoById" resultType="com.entity.UserInfo">
    select * from user_info u where u.id=#{id}
  </select>
  <select id="getRoleById" resultType="java.lang.String">
    select roles from role_info where user_id=#{id}

  </select>
</mapper>